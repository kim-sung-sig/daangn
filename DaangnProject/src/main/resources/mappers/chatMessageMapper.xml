<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org/DTD Mapper 3.0//EN" "./mybatis-3-mapper.dtd" >
<mapper namespace="kr.ezen.daangn.dao.DaangnChatMessageDAO">

	<select id="selectChatByChatRoomIdx" parameterType="hashmap" resultType="ChatMessageVO">
		select
			R.*
		from
			(
			select
				rownum rnum, Q.*
			from	
				(
					select
						*
					from
						chatMessage
					where
						chatRoom = #{chatRoomIdx}
					order by idx desc
				) Q
			where
				<![CDATA[
					rownum <= #{endNo}
				]]>
			) R
		where
			<![CDATA[
				rnum >= #{startNo}
			]]>
	</select>
	
	<select id="selectChatCountByChatRoomIdx" parameterType="int" resultType="int">
		select count(*) from chatMessage where chatRoom = #{chatRoomIdx}
	</select>
	
	<insert id="insertChat" parameterType="ChatMessageVO">
		<selectKey keyColumn="idx" keyProperty="idx" resultType="int" order="BEFORE">
			select chatMessage_idx_seq.nextval from dual
		</selectKey>
		insert into
			chatMessage
		values
			(
				#{idx, jdbcType=INTEGER}
				, #{chatRoom}
				, #{typeRef}
				, #{sender}
				, #{content}
				, sysdate
				, 2
			)
	</insert>
	
	<update id="updateChat" parameterType="int">
		update chatMessage set readed = readed - 1 where idx = #{idx}
	</update>
	
	<select id="unreadCount" parameterType="ChatMessageVO">
		select count(*) from chatMessage where chatRoom = #{chatRoom} and sender = #{sender} and readed = 1
	</select>
	
	<select id="selectByIdx" parameterType="int">
		select * from chatMessage where idx = #{idx}
	</select>
	
	<delete id="deleteChat" parameterType="int">
		delete from chatMessage where idx = #{idx}
	</delete>
</mapper>